{"version":3,"sources":["meteor://ðŸ’»app/imports/api/messages.js","meteor://ðŸ’»app/imports/api/users.js","meteor://ðŸ’»app/imports/startup/roles.js","meteor://ðŸ’»app/server/main.js"],"names":["module","export","Messages","Meteor","importSync","v","Mongo","check","Collection","methods","text","String","userId","Error","insert","createdAt","Date","owner","username","user","id","Roles","userIsInRole","GLOBAL_GROUP","remove","Accounts","password","createUser","users","update","_id","$set","profile","name","email","phone","permission","console","log","addUsersToRoles","removeUsersFromRoles","isServer","roles"],"mappings":"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","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { Mongo } from 'meteor/mongo';\n\nimport { check } from 'meteor/check';\n\nexport const Messages = new Mongo.Collection('messages');\n\n\nMeteor.methods({\n\t'messages.insert'(text) {\n\t\tcheck(text, String);\n\n\t\t// Make sure the user is logged in before inserting a message\n\t    if (! Meteor.userId()) {\n\t      throw new Meteor.Error('not-authorized');\n\t    }\n\n\t    Messages.insert({\n\t    \ttext,\n\t    \tcreatedAt: new Date(),\n\t    \towner: Meteor.userId(),\n\t    \tusername: Meteor.user().username,\n\t    });\n\t},\n\t'messages.remove' (id) {\n\t\tcheck(id, String);\n\t\t// console.log(Meteor.userId());\n\t\t// Roles.addUsersToRoles([Meteor.userId()],'admin', Roles.GLOBAL_GROUP);\n\t\t// console.log(Roles.userIsInRole(Meteor.userId(), 'admin', Roles.GLOBAL_GROUP));\n\t\tif(Roles.userIsInRole(Meteor.userId(), 'admin', Roles.GLOBAL_GROUP)) {\n\t\t\tMessages.remove(id);\n\t\t}\n\t}\n});","import { Accounts } from 'meteor/accounts-base';\n\nimport { Roles } from 'meteor/alanning:roles';\n\nimport { Meteor } from 'meteor/meteor';\n\nMeteor.methods({\n\t'accounts.addUser' (username, password) {\n\t\tvar id = Accounts.createUser({username: username, password: password});\n\t\tMeteor.users.update({_id: id}, {$set: {profile: {name: \"\", email: \"\", phone: \"\"}}});\n\t\treturn id;\n\t},\n\t'roles.setRole'(id, permission) {\n\t\tconsole.log(id);\n\t\tRoles.addUsersToRoles([id], permission, Roles.GLOBAL_GROUP);\n\t},\n\t'roles.blockUser' (id) {\n\t\tRoles.addUsersToRoles([id], 'block', 'postMessage');\n\t},\n\t'roles.unblockUser' (id) {\n\t\tRoles.removeUsersFromRoles([id], 'block', 'postMessage');\n\t},\n\t'user.removeUser' (id) {\n\t\tMeteor.users.remove({_id: id});\n\t},\n\t'user.updateUser' (username, name, email, phone) {\n\t\tif(username === \"root\") {\n\t\t\treturn \"Admin details can't be changed.\";\n\t\t}\n\t\tMeteor.users.update({\"username\": username}, {$set: { \"profile\": {\"name\": name, \"email\": email, \"phone\": phone}}});\n\t\treturn true;\n\t}\n});","import { Roles } from 'meteor/alanning:roles';\n\nimport { Meteor } from 'meteor/meteor';\n\nMeteor.methods({\n\t'setInitialRole'() {\n\t\tif(Meteor.isServer) {\n\t\t\tif(!Meteor.roles) {\n\t\t\t\tconsole.log(\"Setup admin\");\n\t\t\t\tRoles.addUsersToRoles([this.userId], 'admin', Roles.GLOBAL_GROUP);\n\t\t\t}\n\t\t}\n\t}\n});","import '../imports/startup/roles.js';\nimport '../imports/api/messages.js';\nimport '../imports/api/users.js';"]}