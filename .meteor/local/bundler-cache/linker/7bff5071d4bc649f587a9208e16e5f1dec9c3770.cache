[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nRoles = Package['alanning:roles'].Roles;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"messages.js\":[\"meteor/meteor\",\"meteor/mongo\",\"meteor/check\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////\n//                                                                                   //\n// imports/api/messages.js                                                           //\n//                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////\n                                                                                     //\nmodule.export({                                                                      // 1\n\tMessages: function () {                                                             // 1\n\t\treturn Messages;                                                                   // 1\n\t}                                                                                   // 1\n});                                                                                  // 1\nvar Meteor = void 0;                                                                 // 1\nmodule.importSync(\"meteor/meteor\", {                                                 // 1\n\tMeteor: function (v) {                                                              // 1\n\t\tMeteor = v;                                                                        // 1\n\t}                                                                                   // 1\n}, 0);                                                                               // 1\nvar Mongo = void 0;                                                                  // 1\nmodule.importSync(\"meteor/mongo\", {                                                  // 1\n\tMongo: function (v) {                                                               // 1\n\t\tMongo = v;                                                                         // 1\n\t}                                                                                   // 1\n}, 1);                                                                               // 1\nvar check = void 0;                                                                  // 1\nmodule.importSync(\"meteor/check\", {                                                  // 1\n\tcheck: function (v) {                                                               // 1\n\t\tcheck = v;                                                                         // 1\n\t}                                                                                   // 1\n}, 2);                                                                               // 1\nvar Messages = new Mongo.Collection('messages');                                     // 7\nMeteor.methods({                                                                     // 10\n\t'messages.insert': function (text) {                                                // 11\n\t\tcheck(text, String); // Make sure the user is logged in before inserting a message\n                                                                                     //\n\t\tif (!Meteor.userId()) {                                                            // 15\n\t\t\tthrow new Meteor.Error('not-authorized');                                         // 16\n\t\t}                                                                                  // 17\n                                                                                     //\n\t\tMessages.insert({                                                                  // 19\n\t\t\ttext: text,                                                                       // 20\n\t\t\tcreatedAt: new Date(),                                                            // 21\n\t\t\towner: Meteor.userId(),                                                           // 22\n\t\t\tusername: Meteor.user().username                                                  // 23\n\t\t});                                                                                // 19\n\t},                                                                                  // 25\n\t'messages.remove': function (id) {                                                  // 26\n\t\tcheck(id, String); // console.log(Meteor.userId());                                // 27\n\t\t// Roles.addUsersToRoles([Meteor.userId()],'admin', Roles.GLOBAL_GROUP);           // 29\n\t\t// console.log(Roles.userIsInRole(Meteor.userId(), 'admin', Roles.GLOBAL_GROUP));  // 30\n                                                                                     //\n\t\tif (Roles.userIsInRole(Meteor.userId(), 'admin', Roles.GLOBAL_GROUP)) {            // 31\n\t\t\tMessages.remove(id);                                                              // 32\n\t\t}                                                                                  // 33\n\t}                                                                                   // 34\n});                                                                                  // 10\n///////////////////////////////////////////////////////////////////////////////////////\n\n}],\"users.js\":[\"meteor/accounts-base\",\"meteor/alanning:roles\",\"meteor/meteor\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////\n//                                                                                   //\n// imports/api/users.js                                                              //\n//                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////\n                                                                                     //\nvar Accounts = void 0;                                                               // 1\nmodule.importSync(\"meteor/accounts-base\", {                                          // 1\n\tAccounts: function (v) {                                                            // 1\n\t\tAccounts = v;                                                                      // 1\n\t}                                                                                   // 1\n}, 0);                                                                               // 1\nvar Roles = void 0;                                                                  // 1\nmodule.importSync(\"meteor/alanning:roles\", {                                         // 1\n\tRoles: function (v) {                                                               // 1\n\t\tRoles = v;                                                                         // 1\n\t}                                                                                   // 1\n}, 1);                                                                               // 1\nvar Meteor = void 0;                                                                 // 1\nmodule.importSync(\"meteor/meteor\", {                                                 // 1\n\tMeteor: function (v) {                                                              // 1\n\t\tMeteor = v;                                                                        // 1\n\t}                                                                                   // 1\n}, 2);                                                                               // 1\nMeteor.methods({                                                                     // 7\n\t'accounts.addUser': function (username, password) {                                 // 8\n\t\tvar id = Accounts.createUser({                                                     // 9\n\t\t\tusername: username,                                                               // 9\n\t\t\tpassword: password                                                                // 9\n\t\t});                                                                                // 9\n\t\tMeteor.users.update({                                                              // 10\n\t\t\t_id: id                                                                           // 10\n\t\t}, {                                                                               // 10\n\t\t\t$set: {                                                                           // 10\n\t\t\t\tprofile: {                                                                       // 10\n\t\t\t\t\tname: \"\",                                                                       // 10\n\t\t\t\t\temail: \"\",                                                                      // 10\n\t\t\t\t\tphone: \"\"                                                                       // 10\n\t\t\t\t}                                                                                // 10\n\t\t\t}                                                                                 // 10\n\t\t});                                                                                // 10\n\t\treturn id;                                                                         // 11\n\t},                                                                                  // 12\n\t'roles.setRole': function (id, permission) {                                        // 13\n\t\tconsole.log(id);                                                                   // 14\n\t\tRoles.addUsersToRoles([id], permission, Roles.GLOBAL_GROUP);                       // 15\n\t},                                                                                  // 16\n\t'roles.blockUser': function (id) {                                                  // 17\n\t\tRoles.addUsersToRoles([id], 'block', 'postMessage');                               // 18\n\t},                                                                                  // 19\n\t'roles.unblockUser': function (id) {                                                // 20\n\t\tRoles.removeUsersFromRoles([id], 'block', 'postMessage');                          // 21\n\t},                                                                                  // 22\n\t'user.removeUser': function (id) {                                                  // 23\n\t\tMeteor.users.remove({                                                              // 24\n\t\t\t_id: id                                                                           // 24\n\t\t});                                                                                // 24\n\t},                                                                                  // 25\n\t'user.updateUser': function (username, name, email, phone) {                        // 26\n\t\tif (username === \"root\") {                                                         // 27\n\t\t\treturn \"Admin details can't be changed.\";                                         // 28\n\t\t}                                                                                  // 29\n                                                                                     //\n\t\tMeteor.users.update({                                                              // 30\n\t\t\t\"username\": username                                                              // 30\n\t\t}, {                                                                               // 30\n\t\t\t$set: {                                                                           // 30\n\t\t\t\t\"profile\": {                                                                     // 30\n\t\t\t\t\t\"name\": name,                                                                   // 30\n\t\t\t\t\t\"email\": email,                                                                 // 30\n\t\t\t\t\t\"phone\": phone                                                                  // 30\n\t\t\t\t}                                                                                // 30\n\t\t\t}                                                                                 // 30\n\t\t});                                                                                // 30\n\t\treturn true;                                                                       // 31\n\t}                                                                                   // 32\n});                                                                                  // 7\n///////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"startup\":{\"roles.js\":[\"meteor/alanning:roles\",\"meteor/meteor\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////\n//                                                                                   //\n// imports/startup/roles.js                                                          //\n//                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////\n                                                                                     //\nvar Roles = void 0;                                                                  // 1\nmodule.importSync(\"meteor/alanning:roles\", {                                         // 1\n\tRoles: function (v) {                                                               // 1\n\t\tRoles = v;                                                                         // 1\n\t}                                                                                   // 1\n}, 0);                                                                               // 1\nvar Meteor = void 0;                                                                 // 1\nmodule.importSync(\"meteor/meteor\", {                                                 // 1\n\tMeteor: function (v) {                                                              // 1\n\t\tMeteor = v;                                                                        // 1\n\t}                                                                                   // 1\n}, 1);                                                                               // 1\nMeteor.methods({                                                                     // 5\n\t'setInitialRole': function () {                                                     // 6\n\t\tif (Meteor.isServer) {                                                             // 7\n\t\t\tif (!Meteor.roles) {                                                              // 8\n\t\t\t\tconsole.log(\"Setup admin\");                                                      // 9\n\t\t\t\tRoles.addUsersToRoles([this.userId], 'admin', Roles.GLOBAL_GROUP);               // 10\n\t\t\t}                                                                                 // 11\n\t\t}                                                                                  // 12\n\t}                                                                                   // 13\n});                                                                                  // 5\n///////////////////////////////////////////////////////////////////////////////////////\n\n}]}},\"server\":{\"main.js\":[\"../imports/startup/roles.js\",\"../imports/api/messages.js\",\"../imports/api/users.js\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////\n//                                                                                   //\n// server/main.js                                                                    //\n//                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////\n                                                                                     //\nmodule.importSync(\"../imports/startup/roles.js\");                                    // 1\nmodule.importSync(\"../imports/api/messages.js\");                                     // 1\nmodule.importSync(\"../imports/api/users.js\");                                        // 1\n///////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/imports/api/messages.js","/imports/api/users.js","/imports/startup/roles.js","/server/main.js"],"names":["module","export","Messages","Meteor","importSync","v","Mongo","check","Collection","methods","text","String","userId","Error","insert","createdAt","Date","owner","username","user","id","Roles","userIsInRole","GLOBAL_GROUP","remove","Accounts","password","createUser","users","update","_id","$set","profile","name","email","phone","permission","console","log","addUsersToRoles","removeUsersFromRoles","isServer","roles"],"mappings":"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","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { Mongo } from 'meteor/mongo';\n\nimport { check } from 'meteor/check';\n\nexport const Messages = new Mongo.Collection('messages');\n\n\nMeteor.methods({\n\t'messages.insert'(text) {\n\t\tcheck(text, String);\n\n\t\t// Make sure the user is logged in before inserting a message\n\t    if (! Meteor.userId()) {\n\t      throw new Meteor.Error('not-authorized');\n\t    }\n\n\t    Messages.insert({\n\t    \ttext,\n\t    \tcreatedAt: new Date(),\n\t    \towner: Meteor.userId(),\n\t    \tusername: Meteor.user().username,\n\t    });\n\t},\n\t'messages.remove' (id) {\n\t\tcheck(id, String);\n\t\t// console.log(Meteor.userId());\n\t\t// Roles.addUsersToRoles([Meteor.userId()],'admin', Roles.GLOBAL_GROUP);\n\t\t// console.log(Roles.userIsInRole(Meteor.userId(), 'admin', Roles.GLOBAL_GROUP));\n\t\tif(Roles.userIsInRole(Meteor.userId(), 'admin', Roles.GLOBAL_GROUP)) {\n\t\t\tMessages.remove(id);\n\t\t}\n\t}\n});","import { Accounts } from 'meteor/accounts-base';\n\nimport { Roles } from 'meteor/alanning:roles';\n\nimport { Meteor } from 'meteor/meteor';\n\nMeteor.methods({\n\t'accounts.addUser' (username, password) {\n\t\tvar id = Accounts.createUser({username: username, password: password});\n\t\tMeteor.users.update({_id: id}, {$set: {profile: {name: \"\", email: \"\", phone: \"\"}}});\n\t\treturn id;\n\t},\n\t'roles.setRole'(id, permission) {\n\t\tconsole.log(id);\n\t\tRoles.addUsersToRoles([id], permission, Roles.GLOBAL_GROUP);\n\t},\n\t'roles.blockUser' (id) {\n\t\tRoles.addUsersToRoles([id], 'block', 'postMessage');\n\t},\n\t'roles.unblockUser' (id) {\n\t\tRoles.removeUsersFromRoles([id], 'block', 'postMessage');\n\t},\n\t'user.removeUser' (id) {\n\t\tMeteor.users.remove({_id: id});\n\t},\n\t'user.updateUser' (username, name, email, phone) {\n\t\tif(username === \"root\") {\n\t\t\treturn \"Admin details can't be changed.\";\n\t\t}\n\t\tMeteor.users.update({\"username\": username}, {$set: { \"profile\": {\"name\": name, \"email\": email, \"phone\": phone}}});\n\t\treturn true;\n\t}\n});","import { Roles } from 'meteor/alanning:roles';\n\nimport { Meteor } from 'meteor/meteor';\n\nMeteor.methods({\n\t'setInitialRole'() {\n\t\tif(Meteor.isServer) {\n\t\t\tif(!Meteor.roles) {\n\t\t\t\tconsole.log(\"Setup admin\");\n\t\t\t\tRoles.addUsersToRoles([this.userId], 'admin', Roles.GLOBAL_GROUP);\n\t\t\t}\n\t\t}\n\t}\n});","import '../imports/startup/roles.js';\nimport '../imports/api/messages.js';\nimport '../imports/api/users.js';"]}}]